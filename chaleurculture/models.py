from django.db import models
from django.utils import timezone


class UpdatesStats(models.Model):
    #meta
    insertionDate = models.DateTimeField(default=timezone.now)
    date_modified = models.DateTimeField(default=timezone.now)
    HustleStatsStatus=models.CharField(max_length=255,null=True, blank=True ) 
    AdvancedStatsStatus=models.CharField(max_length=255, null=True, blank=True) 
    RegStatsStatus=models.CharField(max_length=255, null=True, blank=True) 
    DefenseStatsStatus=models.CharField(max_length=255, null=True, blank=True)
    RosterStatsStatus=models.CharField(max_length=255, null=True, blank=True)
    def __str__(self):
        """Return a human readable representation of the model instance."""
        return "{}".format(self.name)    
# Create your models here.
class RosterStats(models.Model):
    #meta
    insertionDate = models.DateTimeField(default=timezone.now)
    date_modified = models.DateTimeField(default=timezone.now)

    TeamID=models.CharField(max_length=255,null=True, blank=True )
    SEASON=models.CharField(max_length=255,null=True, blank=True ) 
    LeagueID=models.CharField(max_length=255,null=True, blank=True ) 
    PLAYER=models.CharField(max_length=255,null=True, blank=True )
    NUM=models.CharField(max_length=255,null=True, blank=True )
    POSITION=models.CharField(max_length=255,null=True, blank=True )
    HEIGHT=models.CharField(max_length=255,null=True, blank=True ) 
    WEIGHT=models.IntegerField(null=True, blank=True)
    BIRTH_DATE=models.CharField(max_length=255,null=True, blank=True ) 
    AGE=models.IntegerField(null=True, blank=True)
    EXP=models.CharField(max_length=255,null=True, blank=True ) 
    SCHOOL=models.CharField(max_length=255,null=True, blank=True ) 
    PLAYER_ID=models.CharField(max_length=255,null=True, blank=True )   
    #the % difference between ideal weight for height and player's weight
    PCTDIFFWEIGHT=models.DecimalField(max_digits=20, decimal_places=5, default=None)
    def __str__(self):
        """Return a human readable representation of the model instance."""
        return "{}".format(self.name)
class DefenseStats(models.Model):
    """This class represents the info after zillow model."""
    #meta
    insertionDate = models.DateTimeField(default=timezone.now)
    date_modified = models.DateTimeField(default=timezone.now)
    #defense
    #percent block rank
    PCT_BLK_RANK=models.IntegerField(null=True, blank=True)
    DREB_PCT_RANK=models.IntegerField(null=True, blank=True)
    TEAM_ID=models.CharField(max_length=255, )
    OPP_PTS_PAINT_RANK=models.IntegerField(null=True, blank=True)
    PCT_STL_RANK=models.IntegerField(null=True, blank=True)
    CFPARAMS=models.CharField(max_length=255, null=True, blank=True)
    OPP_PTS_2ND_CHANCE=models.DecimalField(max_digits=20, decimal_places=5, default=None)
    MIN_RANK=models.IntegerField(null=True, blank=True)
    OPP_PTS_OFF_TOV=models.DecimalField(max_digits=20, decimal_places=5, default=None)
    W_RANK=models.IntegerField(null=True, blank=True)
    DEF_WS_RANK=models.IntegerField(null=True, blank=True)
    STL_RANK=models.IntegerField(null=True, blank=True)
    AGE=models.DecimalField(max_digits=20, decimal_places=5, default=None)
    DEF_WS=models.DecimalField(max_digits=20, decimal_places=5, default=None)
    OPP_PTS_FB_RANK=models.IntegerField(null=True, blank=True)
    PLAYER_ID=models.CharField(max_length=255, )
    GP_RANK=models.IntegerField(null=True, blank=True)
    MIN=models.DecimalField(max_digits=20, decimal_places=5, default=None)
    DREB_RANK=models.DecimalField(max_digits=20, decimal_places=5, default=None)
    OPP_PTS_2ND_CHANCE_RANK=models.IntegerField(null=True, blank=True)
    CFID=models.IntegerField(null=True, blank=True)
    DEF_RATING =models.DecimalField(max_digits=20, decimal_places=5, default=None)
    OPP_PTS_FB =models.DecimalField(max_digits=20, decimal_places=5, default=None)
    W_PCT =models.DecimalField(max_digits=20, decimal_places=5, default=None)
    DREB =models.DecimalField(max_digits=20, decimal_places=5, default=None)
    L=models.IntegerField(null=True, blank=True)
    OPP_PTS_OFF_TOV_RANK=models.IntegerField()
    PCT_DREB =models.DecimalField(max_digits=20, decimal_places=5, default=None)
    W_PCT_RANK=models.IntegerField(null=True, blank=True)
    PCT_DREB_RANK=models.IntegerField(null=True, blank=True)
    STL =models.DecimalField(max_digits=20, decimal_places=5, default=None)
    L_RANK=models.IntegerField(null=True, blank=True)
    OPP_PTS_PAINT =models.DecimalField(max_digits=20, decimal_places=5, default=None)
    DREB_PCT =models.DecimalField(max_digits=20, decimal_places=5, default=None)
    W=models.IntegerField(null=True, blank=True)
    BLK_RANK=models.IntegerField(null=True, blank=True)
    DEF_RATING_RANK=models.IntegerField(null=True, blank=True)
    BLK = models.DecimalField(max_digits=20, decimal_places=5, default=None)
    GP=models.IntegerField(null=True, blank=True)
    PCT_BLK=models.DecimalField(max_digits=20, decimal_places=5, default=None)
    PCT_STL=models.DecimalField(max_digits=20, decimal_places=5, default=None)
    def __str__(self):
        """Return a human readable representation of the model instance."""
        return "{}".format(self.name)
 #basic


class BasicStats(models.Model):
    """This class represents the info after zillow model."""
    #meta
    insertionDate = models.DateTimeField(default=timezone.now)
    date_modified = models.DateTimeField(default=timezone.now)
    #basicstats
    CFID=models.CharField(max_length=255,default=None )
    FTM_RANK=models.IntegerField(null=True, blank=True)
    AGE=  models.DecimalField(max_digits=20, decimal_places=5, default=None)
    MIN_RANK=models.IntegerField(null=True, blank=True)
    FG3_PCT_RANK=models.IntegerField(null=True, blank=True)
    FTA=  models.DecimalField(max_digits=20, decimal_places=5, default=None)
    AST=  models.DecimalField(max_digits=20, decimal_places=5, default=None)
    TOV_RANK=models.IntegerField(null=True, blank=True)
    FG3M_RANK=models.IntegerField(null=True, blank=True)
    OREB_RANK=models.IntegerField(null=True, blank=True)
    CFPARAMS=models.CharField(max_length=255,default=None ) 
    FG3M=  models.DecimalField(max_digits=20, decimal_places=5, default=None)
    W=models.IntegerField(null=True, blank=True)
    TEAM_ID= models.CharField(max_length=255, )
    FGM=  models.DecimalField(max_digits=20, decimal_places=5, default=None)
    NBA_FANTASY_PTS=  models.DecimalField(max_digits=20, decimal_places=5, default=None)
    PLUS_MINUS_RANK=models.IntegerField(null=True, blank=True)
    BLKA_RANK=models.IntegerField(null=True, blank=True)
    FT_PCT_RANK=models.IntegerField(null=True, blank=True)
    FG3_PCT=  models.DecimalField(max_digits=20, decimal_places=5, default=None)
    PFD_RANK=models.IntegerField( null=True, blank=True)
    FGA_RANK=models.IntegerField(null=True, blank=True)
    GP=models.IntegerField(null=True, blank=True)
    FTM=  models.DecimalField(max_digits=20, decimal_places=5, default=None)
    FG_PCT_RANK=models.IntegerField(null=True, blank=True)
    W_PCT=  models.DecimalField(max_digits=20, decimal_places=5, default=None)
    PFD=  models.DecimalField(max_digits=20, decimal_places=5, default=None)
    DREB_RANK=models.IntegerField(null=True, blank=True)
    PTS=  models.DecimalField(max_digits=20, decimal_places=5, default=None)
    PF=  models.DecimalField(max_digits=20, decimal_places=5, default=None)
    PLUS_MINUS=  models.DecimalField(max_digits=20, decimal_places=5, default=None)
    FGA=  models.DecimalField(max_digits=20, decimal_places=5, default=None)
    W_RANK=models.IntegerField(null=True, blank=True)
    FGM_RANK=models.IntegerField(null=True, blank=True)
    BLK=  models.DecimalField(max_digits=20, decimal_places=5, default=None)
    PTS_RANK=models.IntegerField(null=True, blank=True)
    PF_RANK=models.IntegerField(null=True, blank=True)
    TOV=  models.DecimalField(max_digits=20, decimal_places=5, default=None)
    AST_RANK=models.IntegerField(null=True, blank=True)
    DD2=models.IntegerField(null=True, blank=True)
    W_PCT_RANK=models.IntegerField(null=True, blank=True)
    FT_PCT=  models.DecimalField(max_digits=20, decimal_places=5, default=None)
    TD3=  models.DecimalField(max_digits=20, decimal_places=5, default=None)
    PLAYER_ID=models.CharField(max_length=255, )
    BLKA=  models.DecimalField(max_digits=20, decimal_places=5, default=None)
    OREB=  models.DecimalField(max_digits=20, decimal_places=5, default=None)
    REB_RANK=models.IntegerField(null=True, blank=True)
    GP_RANK=models.IntegerField(null=True, blank=True)
    FG_PCT=  models.DecimalField(max_digits=20, decimal_places=5, default=None)
    MIN=  models.DecimalField(max_digits=20, decimal_places=5, default=None)
    REB_RANK=models.IntegerField(null=True, blank=True)
    L_RANK=models.IntegerField(null=True, blank=True)
    STL=  models.DecimalField(max_digits=20, decimal_places=5, default=None)
    FG3A_RANK=models.IntegerField(null=True, blank=True)
    DREB=  models.DecimalField(max_digits=20, decimal_places=5,default=None)
    FTA_RANK=models.IntegerField(null=True, blank=True)
    NBA_FANTASY_PTS_RANK=models.IntegerField(null=True, blank=True)
    STL_RANK=models.IntegerField(null=True, blank=True)
    REB=  models.DecimalField(max_digits=20, decimal_places=5, default=None)
    FG3A=  models.DecimalField(max_digits=20, decimal_places=5, default=None)
    BLK_RANK=models.IntegerField(default=None)
    L=models.IntegerField(null=True, blank=True)
    TD3_RANK=models.IntegerField(null=True, blank=True)
    DD2_RANK=models.IntegerField(null=True, blank=True)
    def __str__(self):
        """Return a human readable representation of the model instance."""
        return "{}".format(self.name)

#advanced







class AdvancedStats(models.Model):
    """This class represents the info after zillow model."""
    insertionDate = models.DateTimeField(default=timezone.now)
    date_modified = models.DateTimeField(default=timezone.now)
    PLAYER_ID = models.CharField(max_length=255, default=None)
    PLAYER_NAME = models.CharField(max_length=255,default=None )
    TEAM_ID = models.CharField(max_length=255,default=None )
    GP=models.CharField(max_length=255,default=None )
    W=models.CharField(max_length=255,default=None )
    L=models.CharField(max_length=255,default=None )
    W_PCT=models.CharField(max_length=255,default=None )
    MIN=models.CharField(max_length=255,default=None )
    eOFF_RATING=models.CharField(max_length=255,default=None )
    OFF_RATING=models.CharField(max_length=255,default=None ) 
    sp_work_OFF_RATING=models.CharField(max_length=1000,default=None )
    eDEF_RATING=models.CharField(max_length=255,default=None )
    DEF_RATING=models.CharField(max_length=255,default=None )
    sp_work_DEF_RATING=models.CharField(max_length=255,default=None )
    eNET_RATING=models.CharField(max_length=255,default=None )
    NET_RATING=models.CharField(max_length=255,default=None ) 
    sp_work_NET_RATING=models.CharField(max_length=255,default=None )
    AST_PCT=models.CharField(max_length=255,default=None ) 
    AST_TO=models.CharField(max_length=255,default=None ) 
    AST_RATIO=models.CharField(max_length=255,default=None ) 
    OREB_PCT=models.CharField(max_length=255,default=None ) 
    DREB_PCT=models.CharField(max_length=255,default=None ) 
    REB_PCT=models.CharField(max_length=255,default=None ) 
    EFG_PCT=models.CharField(max_length=255,default=None ) 
    TS_PCT=models.CharField(max_length=255,default=None )
    USG_PCT=models.CharField(max_length=255,default=None ) 
    ePACE=models.CharField(max_length=255,default=None ) 
    PACE=models.CharField(max_length=255,default=None ) 
    sp_work_PACE=models.CharField(max_length=255,default=None ) 
    PIE=models.CharField(max_length=255,default=None ) 
    FGM=models.CharField(max_length=255,default=None ) 
    FGA=models.CharField(max_length=255,default=None )
    FGM_PG=models.CharField(max_length=255,default=None ) 
    FGA_PG=models.CharField(max_length=255,default=None ) 
    FG_PCT=models.CharField(max_length=255,default=None )
    GP_RANK=models.CharField(max_length=255,default=None ) 
    W_RANK=models.CharField(max_length=255,default=None )
    L_RANK=models.CharField(max_length=255,default=None )
    W_PCT_RANK=models.CharField(max_length=255,default=None )
    MIN_RANK=models.CharField(max_length=255,default=None )
    eOFF_RATING_RANK=models.CharField(max_length=255,default=None ) 
    OFF_RATING_RANK=models.CharField(max_length=255,default=None ) 
    sp_work_OFF_RATING_RANK=models.CharField(max_length=255,default=None ) 
    eDEF_RATING_RANK=models.CharField(max_length=255,default=None )
    DEF_RATING_RANK=models.CharField(max_length=255,default=None)
    sp_work_DEF_RATING_RANK=models.CharField(max_length=255,default=None )
    eNET_RATING_RANK=models.CharField(max_length=255,default=None )
    NET_RATING_RANK=models.CharField(max_length=255,default=None )
    sp_work_NET_RATING_RANK=models.CharField(max_length=255,default=None)
    AST_PCT_RANK=models.CharField(max_length=255,default=None )
    AST_TO_RANK=models.CharField(max_length=255,default=None )
    AST_RATIO_RANK=models.CharField(max_length=255,default=None )
    OREB_PCT_RANK=models.CharField(max_length=255,default=None )
    DREB_PCT_RANK=models.CharField(max_length=255,default=None )
    REB_PCT_RANK=models.CharField(max_length=255,default=None )
    TM_TOV_PCT=models.CharField(max_length=255,default=None ) 
    TM_TOV_PCT_RANK=models.CharField(max_length=255,default=None ) 
    EFG_PCT_RANK=models.CharField(max_length=255,default=None ) 
    TS_PCT_RANK=models.CharField(max_length=255,default=None )
    USG_PCT_RANK=models.CharField(max_length=255,default=None )
    ePACE_RANK=models.CharField(max_length=255,default=None )
    PACE_RANK=models.CharField(max_length=255,default=None )
    sp_work_PACE_RANK=models.CharField(max_length=255,default=None )
    PIE_RANK=models.CharField(max_length=255,default=None )
    FGM_RANK=models.CharField(max_length=255, default=None)
    FGA_RANK=models.CharField(max_length=255,default=None )
    FGM_PG_RANK=models.CharField(max_length=255,default=None )
    FGA_PG_RANK=models.CharField(max_length=255,default=None )
    FG_PCT_RANK=models.CharField(max_length=255,default=None )
    CFID=models.CharField(max_length=255,default=None )
    def __str__(self):
        """Return a human readable representation of the model instance."""
        return "{}".format(self.name)



class HustleStats(models.Model):
    """This class represents the info after zillow model."""
  
    insertionDate = models.DateTimeField(default=timezone.now)
    date_modified = models.DateTimeField(default=timezone.now)
    PLAYER_ID=  models.CharField(max_length=255, null=True, blank=True) 
    PLAYER_NAME= models.CharField(max_length=255, null=True, blank=True) 
    TEAM_ABBREVIATION= models.CharField(max_length=255, null=True, blank=True) 
    AGE= models.CharField(max_length=255, null=True, blank=True) 
    G= models.CharField(max_length=255, null=True, blank=True)
    MIN= models.CharField(max_length=255, null=True, blank=True) 
    SCREEN_ASSISTS= models.CharField(max_length=255, null=True, blank=True) 
    SCREEN_AST_PTS= models.CharField(max_length=255, null=True, blank=True) 
    DEFLECTIONS= models.CharField(max_length=255, null=True, blank=True) 
    OFF_LOOSE_BALLS_RECOVERED= models.CharField(max_length=255,null=True, blank=True)
    DEF_LOOSE_BALLS_RECOVERED= models.CharField(max_length=255, null=True, blank=True) 
    LOOSE_BALLS_RECOVERED= models.CharField(max_length=255, null=True, blank=True) 
    PCT_LOOSE_BALLS_RECOVERED_OFF= models.CharField(max_length=255, null=True, blank=True) 
    PCT_LOOSE_BALLS_RECOVERED_DEF= models.CharField(max_length=255, null=True, blank=True) 
    CHARGES_DRAWN= models.CharField(max_length=255, null=True, blank=True) 
    CONTESTED_SHOTS_2PT= models.CharField(max_length=255, null=True, blank=True) 
    CONTESTED_SHOTS_3PT= models.CharField(max_length=255, null=True, blank=True)
    CONTESTED_SHOTS= models.CharField(max_length=255, null=True, blank=True)
    def __str__(self):
        """Return a human readable representation of the model instance."""
        return "{}".format(self.name)       